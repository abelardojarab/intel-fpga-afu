	component dma_test_system is
		port (
			ccip_avmm_mmio_waitrequest           : out std_logic;                                         -- waitrequest
			ccip_avmm_mmio_readdata              : out std_logic_vector(63 downto 0);                     -- readdata
			ccip_avmm_mmio_readdatavalid         : out std_logic;                                         -- readdatavalid
			ccip_avmm_mmio_burstcount            : in  std_logic_vector(0 downto 0)   := (others => 'X'); -- burstcount
			ccip_avmm_mmio_writedata             : in  std_logic_vector(63 downto 0)  := (others => 'X'); -- writedata
			ccip_avmm_mmio_address               : in  std_logic_vector(17 downto 0)  := (others => 'X'); -- address
			ccip_avmm_mmio_write                 : in  std_logic                      := 'X';             -- write
			ccip_avmm_mmio_read                  : in  std_logic                      := 'X';             -- read
			ccip_avmm_mmio_byteenable            : in  std_logic_vector(7 downto 0)   := (others => 'X'); -- byteenable
			ccip_avmm_mmio_debugaccess           : in  std_logic                      := 'X';             -- debugaccess
			ccip_avmm_requestor_rd_waitrequest   : in  std_logic                      := 'X';             -- waitrequest
			ccip_avmm_requestor_rd_readdata      : in  std_logic_vector(511 downto 0) := (others => 'X'); -- readdata
			ccip_avmm_requestor_rd_readdatavalid : in  std_logic                      := 'X';             -- readdatavalid
			ccip_avmm_requestor_rd_burstcount    : out std_logic_vector(2 downto 0);                      -- burstcount
			ccip_avmm_requestor_rd_writedata     : out std_logic_vector(511 downto 0);                    -- writedata
			ccip_avmm_requestor_rd_address       : out std_logic_vector(47 downto 0);                     -- address
			ccip_avmm_requestor_rd_write         : out std_logic;                                         -- write
			ccip_avmm_requestor_rd_read          : out std_logic;                                         -- read
			ccip_avmm_requestor_rd_byteenable    : out std_logic_vector(63 downto 0);                     -- byteenable
			ccip_avmm_requestor_rd_debugaccess   : out std_logic;                                         -- debugaccess
			ccip_avmm_requestor_wr_waitrequest   : in  std_logic                      := 'X';             -- waitrequest
			ccip_avmm_requestor_wr_readdata      : in  std_logic_vector(511 downto 0) := (others => 'X'); -- readdata
			ccip_avmm_requestor_wr_readdatavalid : in  std_logic                      := 'X';             -- readdatavalid
			ccip_avmm_requestor_wr_burstcount    : out std_logic_vector(2 downto 0);                      -- burstcount
			ccip_avmm_requestor_wr_writedata     : out std_logic_vector(511 downto 0);                    -- writedata
			ccip_avmm_requestor_wr_address       : out std_logic_vector(48 downto 0);                     -- address
			ccip_avmm_requestor_wr_write         : out std_logic;                                         -- write
			ccip_avmm_requestor_wr_read          : out std_logic;                                         -- read
			ccip_avmm_requestor_wr_byteenable    : out std_logic_vector(63 downto 0);                     -- byteenable
			ccip_avmm_requestor_wr_debugaccess   : out std_logic;                                         -- debugaccess
			ddr4a_clk_clk                        : in  std_logic                      := 'X';             -- clk
			ddr4a_master_waitrequest             : in  std_logic                      := 'X';             -- waitrequest
			ddr4a_master_readdata                : in  std_logic_vector(511 downto 0) := (others => 'X'); -- readdata
			ddr4a_master_readdatavalid           : in  std_logic                      := 'X';             -- readdatavalid
			ddr4a_master_burstcount              : out std_logic_vector(2 downto 0);                      -- burstcount
			ddr4a_master_writedata               : out std_logic_vector(511 downto 0);                    -- writedata
			ddr4a_master_address                 : out std_logic_vector(31 downto 0);                     -- address
			ddr4a_master_write                   : out std_logic;                                         -- write
			ddr4a_master_read                    : out std_logic;                                         -- read
			ddr4a_master_byteenable              : out std_logic_vector(63 downto 0);                     -- byteenable
			ddr4a_master_debugaccess             : out std_logic;                                         -- debugaccess
			ddr4b_clk_clk                        : in  std_logic                      := 'X';             -- clk
			ddr4b_master_waitrequest             : in  std_logic                      := 'X';             -- waitrequest
			ddr4b_master_readdata                : in  std_logic_vector(511 downto 0) := (others => 'X'); -- readdata
			ddr4b_master_readdatavalid           : in  std_logic                      := 'X';             -- readdatavalid
			ddr4b_master_burstcount              : out std_logic_vector(2 downto 0);                      -- burstcount
			ddr4b_master_writedata               : out std_logic_vector(511 downto 0);                    -- writedata
			ddr4b_master_address                 : out std_logic_vector(31 downto 0);                     -- address
			ddr4b_master_write                   : out std_logic;                                         -- write
			ddr4b_master_read                    : out std_logic;                                         -- read
			ddr4b_master_byteenable              : out std_logic_vector(63 downto 0);                     -- byteenable
			ddr4b_master_debugaccess             : out std_logic;                                         -- debugaccess
			ddr4c_clk_clk                        : in  std_logic                      := 'X';             -- clk
			ddr4c_master_waitrequest             : in  std_logic                      := 'X';             -- waitrequest
			ddr4c_master_readdata                : in  std_logic_vector(511 downto 0) := (others => 'X'); -- readdata
			ddr4c_master_readdatavalid           : in  std_logic                      := 'X';             -- readdatavalid
			ddr4c_master_burstcount              : out std_logic_vector(2 downto 0);                      -- burstcount
			ddr4c_master_writedata               : out std_logic_vector(511 downto 0);                    -- writedata
			ddr4c_master_address                 : out std_logic_vector(31 downto 0);                     -- address
			ddr4c_master_write                   : out std_logic;                                         -- write
			ddr4c_master_read                    : out std_logic;                                         -- read
			ddr4c_master_byteenable              : out std_logic_vector(63 downto 0);                     -- byteenable
			ddr4c_master_debugaccess             : out std_logic;                                         -- debugaccess
			ddr4d_clk_clk                        : in  std_logic                      := 'X';             -- clk
			ddr4d_master_waitrequest             : in  std_logic                      := 'X';             -- waitrequest
			ddr4d_master_readdata                : in  std_logic_vector(511 downto 0) := (others => 'X'); -- readdata
			ddr4d_master_readdatavalid           : in  std_logic                      := 'X';             -- readdatavalid
			ddr4d_master_burstcount              : out std_logic_vector(2 downto 0);                      -- burstcount
			ddr4d_master_writedata               : out std_logic_vector(511 downto 0);                    -- writedata
			ddr4d_master_address                 : out std_logic_vector(31 downto 0);                     -- address
			ddr4d_master_write                   : out std_logic;                                         -- write
			ddr4d_master_read                    : out std_logic;                                         -- read
			ddr4d_master_byteenable              : out std_logic_vector(63 downto 0);                     -- byteenable
			ddr4d_master_debugaccess             : out std_logic;                                         -- debugaccess
			dma_irq_irq                          : out std_logic;                                         -- irq
			host_clk_clk                         : in  std_logic                      := 'X';             -- clk
			reset_reset                          : in  std_logic                      := 'X'              -- reset
		);
	end component dma_test_system;

