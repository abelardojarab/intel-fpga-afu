	ex_100g u0 (
		.clk_rxmac             (_connected_to_clk_rxmac_),             //  output,    width = 1, avalon_st_rx.clk_rxmac
		.l8_rx_error           (_connected_to_l8_rx_error_),           //  output,    width = 6,             .l8_rx_error
		.l8_rx_valid           (_connected_to_l8_rx_valid_),           //  output,    width = 1,             .l8_rx_valid
		.l8_rx_startofpacket   (_connected_to_l8_rx_startofpacket_),   //  output,    width = 1,             .l8_rx_startofpacket
		.l8_rx_endofpacket     (_connected_to_l8_rx_endofpacket_),     //  output,    width = 1,             .l8_rx_endofpacket
		.l8_rx_empty           (_connected_to_l8_rx_empty_),           //  output,    width = 6,             .l8_rx_empty
		.l8_rx_data            (_connected_to_l8_rx_data_),            //  output,  width = 512,             .l8_rx_data
		.clk_txmac             (_connected_to_clk_txmac_),             //  output,    width = 1, avalon_st_tx.clk_txmac
		.l8_tx_startofpacket   (_connected_to_l8_tx_startofpacket_),   //   input,    width = 1,             .l8_tx_startofpacket
		.l8_tx_endofpacket     (_connected_to_l8_tx_endofpacket_),     //   input,    width = 1,             .l8_tx_endofpacket
		.l8_tx_valid           (_connected_to_l8_tx_valid_),           //   input,    width = 1,             .l8_tx_valid
		.l8_tx_ready           (_connected_to_l8_tx_ready_),           //  output,    width = 1,             .l8_tx_ready
		.l8_tx_error           (_connected_to_l8_tx_error_),           //   input,    width = 1,             .l8_tx_error
		.l8_tx_empty           (_connected_to_l8_tx_empty_),           //   input,    width = 6,             .l8_tx_empty
		.l8_tx_data            (_connected_to_l8_tx_data_),            //   input,  width = 512,             .l8_tx_data
		.tx_lanes_stable       (_connected_to_tx_lanes_stable_),       //  output,    width = 1,        other.tx_lanes_stable
		.rx_pcs_ready          (_connected_to_rx_pcs_ready_),          //  output,    width = 1,             .rx_pcs_ready
		.rx_block_lock         (_connected_to_rx_block_lock_),         //  output,    width = 1,             .rx_block_lock
		.rx_am_lock            (_connected_to_rx_am_lock_),            //  output,    width = 1,             .rx_am_lock
		.clk_ref               (_connected_to_clk_ref_),               //   input,    width = 1,             .clk_ref
		.csr_rst_n             (_connected_to_csr_rst_n_),             //   input,    width = 1,             .csr_rst_n
		.tx_rst_n              (_connected_to_tx_rst_n_),              //   input,    width = 1,             .tx_rst_n
		.rx_rst_n              (_connected_to_rx_rst_n_),              //   input,    width = 1,             .rx_rst_n
		.tx_serial_clk         (_connected_to_tx_serial_clk_),         //   input,    width = 2,             .tx_serial_clk
		.tx_pll_locked         (_connected_to_tx_pll_locked_),         //   input,    width = 2,             .tx_pll_locked
		.reconfig_clk          (_connected_to_reconfig_clk_),          //   input,    width = 1,     reconfig.reconfig_clk
		.reconfig_reset        (_connected_to_reconfig_reset_),        //   input,    width = 1,             .reconfig_reset
		.reconfig_write        (_connected_to_reconfig_write_),        //   input,    width = 1,             .reconfig_write
		.reconfig_read         (_connected_to_reconfig_read_),         //   input,    width = 1,             .reconfig_read
		.reconfig_address      (_connected_to_reconfig_address_),      //   input,   width = 13,             .reconfig_address
		.reconfig_writedata    (_connected_to_reconfig_writedata_),    //   input,   width = 32,             .reconfig_writedata
		.reconfig_readdata     (_connected_to_reconfig_readdata_),     //  output,   width = 32,             .reconfig_readdata
		.reconfig_waitrequest  (_connected_to_reconfig_waitrequest_),  //  output,    width = 1,             .reconfig_waitrequest
		.tx_serial             (_connected_to_tx_serial_),             //  output,    width = 4, serial_lanes.tx_serial
		.rx_serial             (_connected_to_rx_serial_),             //   input,    width = 4,             .rx_serial
		.l8_txstatus_valid     (_connected_to_l8_txstatus_valid_),     //  output,    width = 1,        stats.l8_txstatus_valid
		.l8_txstatus_data      (_connected_to_l8_txstatus_data_),      //  output,   width = 40,             .l8_txstatus_data
		.l8_txstatus_error     (_connected_to_l8_txstatus_error_),     //  output,    width = 7,             .l8_txstatus_error
		.l8_rxstatus_valid     (_connected_to_l8_rxstatus_valid_),     //  output,    width = 1,             .l8_rxstatus_valid
		.l8_rxstatus_data      (_connected_to_l8_rxstatus_data_),      //  output,   width = 40,             .l8_rxstatus_data
		.clk_status            (_connected_to_clk_status_),            //   input,    width = 1,       status.clk_status
		.status_write          (_connected_to_status_write_),          //   input,    width = 1,             .status_write
		.status_read           (_connected_to_status_read_),           //   input,    width = 1,             .status_read
		.status_addr           (_connected_to_status_addr_),           //   input,   width = 16,             .status_addr
		.status_writedata      (_connected_to_status_writedata_),      //   input,   width = 32,             .status_writedata
		.status_readdata       (_connected_to_status_readdata_),       //  output,   width = 32,             .status_readdata
		.status_readdata_valid (_connected_to_status_readdata_valid_), //  output,    width = 1,             .status_readdata_valid
		.status_waitrequest    (_connected_to_status_waitrequest_)     //  output,    width = 1,             .status_waitrequest
	);

