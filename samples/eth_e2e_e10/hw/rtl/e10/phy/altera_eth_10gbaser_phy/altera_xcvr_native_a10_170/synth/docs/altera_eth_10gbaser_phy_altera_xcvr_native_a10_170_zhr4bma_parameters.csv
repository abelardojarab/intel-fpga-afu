NAME,DISPLAY_NAME,ALLOWED_RANGES,DEFAULT_VALUE,DESCRIPTION
"device_family","device_family","","Arria 10",""
"device","device","","Unknown",""
"base_device","base_device","","nightfury5es",""
"design_environment","design_environment","","NATIVE",""
"message_level","Message level for rule violations","error warning","error","Specifies the messaging level to use for parameter rule violations. Selecting "error" causes all rule violations to prevent IP generation. Selecting "warning" displays all rule violations as warnings and allows IP generation in spite of violations."
"anlg_voltage","VCCR_GXB and VCCT_GXB supply voltage for the Transceiver","1_1V 1_0V 0_9V","1_0V","Selects the VCCR_GXB and VCCT_GXB supply voltage for the Transceiver."
"anlg_link","Tranceiver Link Type","sr:SR lr:LR","sr","Selects the type of transceiver link. SR-Short Reach (Chip-to-chip communication), LR-Long Reach (Backplane communication)"
"protocol_mode","Transceiver configuration rules","{basic_std:Basic/Custom (Standard PCS)} {basic_std_rm:Basic/Custom w/Rate Match (Standard PCS)} {cpri:CPRI (Auto)} {cpri_rx_tx:CPRI (Manual)} gige:GbE {gige_1588:GbE 1588} {pipe_g1:Gen 1 PIPE} {pipe_g2:Gen 2 PIPE} {pipe_g3:Gen 3 PIPE} {basic_enh:Basic (Enhanced PCS)} interlaken_mode:Interlaken teng_baser_mode:10GBASE-R {teng_1588_mode:10GBASE-R 1588} {teng_baser_krfec_mode:10GBASE-R w/KR FEC} {fortyg_basekr_krfec_mode:40GBASE-R w/KR FEC} {basic_krfec_mode:Basic w/KR FEC} {pcs_direct:PCS Direct}","basic_std","Selects the protocol configuration rules for the transceiver. This parameter governs the rules for correct settings of individual parameters within the PMA and PCS. Certain features of the transceiver are available only for specific protocol configuration rules. This parameter is not a "preset". You must still correctly set all other parameters for your specific protocol and application needs."
"pma_mode","PMA configuration rules","basic SATA:SATA/SAS QPI GPON","basic","Selects the configuration rules for PMA. Options are SATA/SAS, GPON, QPI and basic. Basic should be selected for all modes other than SATA/SAS, GPON, and QPI. SATA/SAS mode can be used only if "Transceiver configuration rules" is selected as Standard PCS. GPON mode can be used only if "Transceiver configuration rules" is selected as Standard or Enhanced PCS. QPI mode can be used only if "Transceiver configuration rules" is selected as PCS Direct. This parameter is not a "preset". You must still correctly set other parameters and enable relavant ports for your specific application needs."
"duplex_mode","Transceiver mode","{duplex:TX/RX Duplex} {tx:TX Simplex} {rx:RX Simplex}","duplex","Selects the transceiver operation mode."
"channels","Number of data channels","1:96","1","Specifies the total number of data channels."
"set_data_rate","Data rate","","1250","Specifies the transceiver data rate in units of Mbps (megabits per second)."
"rcfg_iface_enable","Enable datapath and interface reconfiguration","{0 1}","0","Enables the ability to preconfigure and dynamically switch between the Standard PCS, Enhanced PCS, and PCS direct transceiver datapaths."
"enable_simple_interface","Enable simplified data interface","{0 1}","0","When selected the Native PHY presents a simplified data and control interface between the FPGA and transceiver. When not selected the Native PHY presents the full raw data interface to the transceiver. You need to understand the mapping of data and control signals within the interface. This option cannot be enabled if you want to perform dynamic interface reconfiguration as only a fixed subset of the data and control signals are provided."
"set_disconnect_analog_resets","Disconnect analog resets","{0 1}","0","When selected the Native PHY will disconnect the tx_analogreset and rx_analogreset. This can be enabled only after consultation with Altera factory/applications."
"enable_transparent_pcs","Enable transparent PCS","{0 1}","0",""
"bonded_mode","TX channel bonding mode","{not_bonded:Not bonded} {pma_only:PMA only bonding} {pma_pcs:PMA and PCS bonding}","not_bonded","Specifies the transceiver TX channel bonding mode to control channel-to-channel skew for the TX datapath. Refer to the user guide for bonding details. Options are no TX channel bonding (non-bonded); PMA only channel bonding; or PMA & PCS channel bonding."
"tx_pma_clk_div","TX local clock division factor","1 2 4 8","1","Specifies the TX serial clock division factor. The transceiver has the ability to further divide the TX serial clock from the TX PLL before use. This parameter specifies the division factor to use. Example: A PLL data rate of "10000 Mbps" and a local division factor of 8 results in a channel data rate of "1250 Mbps""
"plls","Number of TX PLL clock inputs per channel","1 2 3 4","1","Specifies the desired number of TX PLL clock inputs per channel. This is used when you intend to dynamically switch between TX PLL clock sources. The Native PHY presents up to 4 clock inputs per channel to allow dynamically input clock switching."
"pll_select","Initial TX PLL clock input selection","0","0","Specifies the initially selected TX PLL clock input. This indicates the starting clock input selection used for this configuration when dynamically switching between multiple TX PLL clock inputs."
"enable_port_tx_analog_reset_ack","Enable tx_analog_reset_ack port","{0 1}","0","Enables the optional tx_pma_analog_reset_ack output. This port should not be used for register mode data transfers."
"enable_port_tx_pma_clkout","Enable tx_pma_clkout port","{0 1}","0","Enables the optional tx_pma_clkout output clock. This is the parallel clock from the TX PMA. This port is not to be used to clock the data interface."
"enable_port_tx_pma_div_clkout","Enable tx_pma_div_clkout port","{0 1}","0","Enables the optional tx_pma_div_clkout output clock. This port should not be used for register mode data transfers."
"tx_pma_div_clkout_divider","tx_pma_div_clkout division factor","0:Disabled 1 2 33 40 66","0","Specifies the divider value for the tx_pma_div_clkout clock signal."
"enable_port_tx_pma_iqtxrx_clkout","Enable tx_pma_iqtxrx_clkout port","{0 1}","0","Enables the optional tx_pma_iqtxrx_clkout output clock. This clock can be used to cascade the TX PMA output clock to the input of a PLL."
"enable_port_tx_pma_elecidle","Enable tx_pma_elecidle port","{0 1}","0","Enables the optional tx_pma_elecidle control input port. The assertion of this signal forces the transmitter into an electrical idle condition. Note that this port has no effect when the transceiver is configured for PCI express modes."
"enable_port_tx_pma_qpipullup","Enable tx_pma_qpipullup port (QPI)","{0 1}","0","Enables the tx_pma_qpipullup control input port. This port is used only in QPI applications."
"enable_port_tx_pma_qpipulldn","Enable tx_pma_qpipulldn port (QPI)","{0 1}","0","Enables the tx_pma_qpipulldn control input port. This port is used only in QPI applications."
"enable_port_tx_pma_txdetectrx","Enable tx_pma_txdetectrx port (QPI)","{0 1}","0","Enables the tx_pma_txdetectrx control input port. This port is used only in QPI applications. The receiver detect block in TX PMA detects the presence of a receiver at the other end of the channel. After receiving tx_pma_txdetectrx request the receiver detect block initiates the detection process."
"enable_port_tx_pma_rxfound","Enable tx_pma_rxfound port (QPI)","{0 1}","0","Enables the tx_rxfound status output port. This port is used only in QPI applications. The receiver detect block in TX PMA detects the presence of a receiver at the other end by using tx_pma_txdetectrx input. Detection of RX status is given on the tx_pma_rxfound port."
"enable_port_rx_seriallpbken_tx","Enable rx_seriallpbken port","{0 1}","0","Enables the optional rx_seriallpbken control input port. The assertion of this signal enables the TX to RX serial loopback path within the transceiver. This is an asynchronous input signal. This signal can be enabled in Duplex or Simplex mode. If enabled in Simplex mode, you must drive the signal on both the TX and RX instances from the same source. Otherwise the design fails compilation."
"cdr_refclk_cnt","Number of CDR reference clocks","1 2 3 4 5","1","Specifies the number of input reference clocks for the RX CDRs. The same bus of reference clocks feeds all RX CDRs in the netlist."
"cdr_refclk_select","Selected CDR reference clock","0","0","Specifies the initially selected reference clock input to the RX CDRs."
"set_cdr_refclk_freq","Selected CDR reference clock frequency","50.060680 50.551471 51.051980 51.562500 52.083333 52.614796 53.157216 53.710938 54.276316 54.853723 55.443548 56.046196 56.662088 57.291667 57.935393 58.593750 59.267241 59.956395 60.661765 61.383929 62.123494 62.881098 63.657407 64.453125 65.268987 66.105769 66.964286 67.845395 68.750000 69.679054 70.633562 71.614583 72.623239 73.660714 74.728261 75.827206 76.958955 78.125000 79.326923 80.566406 81.845238 83.165323 84.528689 85.937500 87.394068 88.900862 90.460526 92.075893 93.750000 95.486111 97.287736 99.158654 100.121359 101.102941 102.103960 103.125000 104.166667 105.229592 106.314433 107.421875 108.552632 109.707447 110.887097 112.092391 113.324176 114.583333 115.870787 117.187500 118.534483 119.912791 121.323529 122.767857 124.246988 125.762195 127.314815 128.906250 130.537975 132.211538 133.928571 135.690789 137.500000 139.358108 141.267123 143.229167 145.246479 147.321429 149.456522 151.654412 153.917910 156.250000 158.653846 161.132812 163.690476 166.330645 169.057377 171.875000 174.788136 177.801724 180.921053 184.151786 187.500000 190.972222 194.575472 198.317308 200.242718 202.205882 204.207921 206.250000 208.333333 210.459184 212.628866 214.843750 217.105263 219.414894 221.774194 224.184783 226.648352 229.166667 231.741573 234.375000 237.068966 239.825581 242.647059 245.535714 248.493976 251.524390 254.629630 257.812500 261.075949 264.423077 267.857143 271.381579 275.000000 278.716216 282.534247 286.458333 290.492958 294.642857 298.913043 303.308824 307.835821 312.500000 317.307692 322.265625 327.380952 332.661290 338.114754 343.750000 349.576271 355.603448 361.842105 368.303571 375.000000 381.944444 389.150943 396.634615 400.485437 404.411765 408.415842 412.500000 416.666667 420.918367 425.257732 429.687500 434.210526 438.829787 443.548387 448.369565 453.296703 458.333333 463.483146 468.750000 474.137931 479.651163 485.294118 491.071429 496.987952 503.048780 509.259259 515.625000 522.151899 528.846154 535.714286 542.763158 550.000000 557.432432 565.068493 572.916667 580.985915 589.285714 597.826087 606.617647 615.671642 625.000000 634.615385 644.531250 654.761905 665.322581 676.229508 687.500000 699.152542 711.206897 723.684211 736.607143 750.000000 763.888889 778.301887 793.269231","125.000","Specifies the frequency in MHz of the selected reference clock input to the CDR."
"rx_ppm_detect_threshold","PPM detector threshold","100 300 500 1000","1000","Specifies the tolerable difference in PPM (parts per million) between the RX CDR reference clock and the recovered clock from the RX data input."
"rx_pma_ctle_adaptation_mode","CTLE mode","manual one-time:triggered","manual","Specifies the operation mode for Continuous Time Linear Equalizer (CTLE). Options are "manual" (where user is expected to set CTLE through qsf assignment or DPRIO) and "triggered" (where CTLE is adapted at user request - (i.e. resetting adaptation and requesting adaptation start through DPRIO)). CTLE boosts the near Nyquist frequency content of the received signal."
"rx_pma_dfe_adaptation_mode","DFE mode","{continuous:adaptation enabled} manual disabled","disabled","Specifies the operation mode for Decision Feedback Equalizer (DFE). Options are "disable" (where DFE is bypassed), "adaptation enabled" (where the DFE taps are adapted automatically), "manual" (where the DFE is expected to be configured manually by user through qsf assignments or DPRIO)."
"enable_ports_adaptation","Enable adaptation control ports","{0 1}","0","Enables the optional rx_adapt_reset, and rx_adapt_start ports. These ports are used to control the adaptation engine (adaptation engine can also be controlled through DPRIO interface). Even if they are exposed, the ports are not usable until they are activated through DPRIO interface. For adaptation engine control: user needs to apply the reset first, after releasing reset, assert the start. The adaptation status can be observed through DPRIO interface."
"enable_port_rx_analog_reset_ack","Enable rx_analog_reset_ack port","{0 1}","0","Enables the optional rx_analog_reset_ack output. This port should not be used for register mode data transfers."
"enable_port_rx_pma_clkout","Enable rx_pma_clkout port","{0 1}","0","Enables the optional rx_pma_clkout output clock. This is the recovered parallel clock from the RX CDR. This port is not to be used to clock the data interface."
"enable_port_rx_pma_div_clkout","Enable rx_pma_div_clkout port","{0 1}","0","Enables the optional rx_pma_div_clkout output clock. This port should not be used for register mode data transfers."
"rx_pma_div_clkout_divider","rx_pma_div_clkout division factor","0:Disabled 1 2 33 40 66","0","Specifies the divider value for the rx_pma_div_clkout clock signal."
"enable_port_rx_pma_iqtxrx_clkout","Enable rx_pma_iqtxrx_clkout port","{0 1}","0","Enables the optional rx_pma_iqtxrx_clkout output clock. This clock can be used to cascade the RX PMA output clock to the input of a PLL."
"enable_port_rx_pma_clkslip","Enable rx_pma_clkslip port","{0 1}","0","Enables the optional rx_pma_clkslip control input port. A rising edge on this signal causes the RX serializer to slip the serial data by one clock cycle (2 UI)."
"enable_port_rx_pma_qpipulldn","Enable rx_pma_qpipulldn port (QPI)","{0 1}","0","Enables the rx_pma_qpipulldn control input port. This port is used only in QPI applications."
"enable_port_rx_is_lockedtodata","Enable rx_is_lockedtodata port","{0 1}","1","Enables the optional rx_is_lockedtodata status output port. This signal indicates that the RX CDR is currently in lock to data mode or is attempting to lock to the incoming data stream. This is an asynchronous output signal."
"enable_port_rx_is_lockedtoref","Enable rx_is_lockedtoref port","{0 1}","1","Enables the optional rx_is_lockedtoref status output port. This signal indicates that the RX CDR is currently locked to the CDR reference clock. This is an asynchronous output signal."
"enable_ports_rx_manual_cdr_mode","Enable rx_set_locktodata and rx_set_locktoref ports","{0 1}","0","Enables the optional rx_set_locktodata and rx_set_locktoref control input ports. These ports are used to manually control the lock mode of the RX CDR. These are asynchonous input signals."
"enable_port_rx_signaldetect","Enable rx_signaldetect port","{0 1}","0","Enables the optional rx_signaldetect status output port. The assertion of this signal indicates detection of an input signal to the RX PMA. Refer to the user guide for applications and limitations. This is an asynchronous output signal."
"enable_port_rx_seriallpbken","Enable rx_seriallpbken port","{0 1}","0","Enables the optional rx_seriallpbken control input port. The assertion of this signal enables the TX to RX serial loopback path within the transceiver. This is an asynchronous input signal. This signal can be enabled in Duplex or Simplex mode. If enabled in Simplex mode, you must drive the signal on both the TX and RX instances from the same source. Otherwise the design fails compilation."
"enable_ports_rx_prbs","Enable PRBS verifier control and status ports","{0 1}","0","Enables the optional rx_prbs_err, rx_prbs_err_clr, and rx_prbs_done ports. These ports are used to control and collect status from the internal PRBS verifier."
"enh_pcs_pma_width","Enhanced PCS / PMA interface width","32 40 64","40","Specifies the data interface width between the Enhanced PCS and the transceiver PMA."
"enh_pld_pcs_width","FPGA fabric / Enhanced PCS interface width","32 40 64 66 67","40","Specifies the data interface width between the Enhanced PCS and the FPGA fabric."
"enh_low_latency_enable","Enable 'Enhanced PCS' low latency mode","{0 1}","0","Enables the low latency path for the 'Enhanced PCS'. Enabling this option bypasses the individual functional blocks within the 'Enhanced PCS' to provide the lowest latency datapath from the PMA through the 'Enhanced PCS'."
"enh_rxtxfifo_double_width","Enable RX/TX FIFO double width mode","{0 1}","0","Enables the double width mode for RX and TX FIFOs. Double width mode can be used to run the FPGA fabric at half clock speed."
"enh_txfifo_mode","TX FIFO mode","{Phase compensation} Register Interlaken Basic {Fast register}","Phase compensation","Specifies the mode for the Enhanced PCS TX FIFO."
"enh_txfifo_pfull","TX FIFO partially full threshold","0:15","11","Specifies the partially full threshold for the Enhanced PCS TX FIFO."
"enh_txfifo_pempty","TX FIFO partially empty threshold","0:15","2","Specifies the partially empty threshold for the Enhanced PCS TX FIFO."
"enable_port_tx_enh_fifo_full","Enable tx_enh_fifo_full port","{0 1}","0","Enables the optional tx_enh_fifo_full status output port. This signal indicates when the TX FIFO has reached the specified full threshold."
"enable_port_tx_enh_fifo_pfull","Enable tx_enh_fifo_pfull port","{0 1}","0","Enables the optional tx_enh_fifo_pfull status output port. This signal indicates when the TX FIFO has reached the specified partially full threshold."
"enable_port_tx_enh_fifo_empty","Enable tx_enh_fifo_empty port","{0 1}","0","Enables the optional tx_enh_fifo_empty status output port. This signal indicates when the TX FIFO has reached the speciifed empty threshold."
"enable_port_tx_enh_fifo_pempty","Enable tx_enh_fifo_pempty port","{0 1}","0","Enables the optional tx_enh_fifo_pempty status output port. This signal indicates when the TX FIFO has reached the specified partially empty threshold."
"enable_port_tx_enh_fifo_cnt","Enable tx_enh_fifo_cnt port","{0 1}","0","Enables the optional tx_enh_fifo_cnt status output port. This signal indicates the current level of the TX FIFO."
"enh_rxfifo_mode","RX FIFO mode","{Phase compensation} Register Interlaken 10GBase-R Basic","Phase compensation","Specifies the mode for the Enhanced PCS RX FIFO."
"enh_rxfifo_pfull","RX FIFO partially full threshold","0:31","23","Specifies the partially full threshold for the Enhanced PCS RX FIFO."
"enh_rxfifo_pempty","RX FIFO partially empty threshold","0:31","2","Specifies the partially empty threshold for the Enhanced PCS RX FIFO."
"enh_rxfifo_align_del","Enable RX FIFO alignment word deletion (Interlaken)","{0 1}","0","Enables Interlaken alignment word (sync word) removal. When the Enhanced PCS RX FIFO is configured for Interlaken mode, enabling this option removes all alignment (sync) words once frame synchronization has occurred. This includes the first sync word. Enabling this option requires that you also enable control word deletion."
"enh_rxfifo_control_del","Enable RX FIFO control word deletion (Interlaken)","{0 1}","0","Enables Interlaken control word removal. When the Enhanced PCS RX FIFO is configured for Interlaken mode enabling this option removes all control words after frame synchronization has occurred. Enabling this option requires that you also enable alignment word deletion."
"enable_port_rx_enh_data_valid","Enable rx_enh_data_valid port","{0 1}","0","Enables the optional rx_enh_data_valid status output port. This signal indicates when RX data from the RX FIFO is valid."
"enable_port_rx_enh_fifo_full","Enable rx_enh_fifo_full port","{0 1}","0","Enables the optional rx_enh_fifo_full status output port. This signal indicates when the RX FIFO has reached the specified full threshold."
"enable_port_rx_enh_fifo_pfull","Enable rx_enh_fifo_pfull port","{0 1}","0","Enables the optional rx_enh_fifo_pfull status output port. This signal indicates when the RX FIFO has reached the specified partially full threshold."
"enable_port_rx_enh_fifo_empty","Enable rx_enh_fifo_empty port","{0 1}","0","Enables the optional rx_enh_fifo_empty status output port. This signal indicates when the RX FIFO has reached the speciifed empty threshold."
"enable_port_rx_enh_fifo_pempty","Enable rx_enh_fifo_pempty port","{0 1}","0","Enables the optional rx_enh_fifo_pempty status output port. This signal indicates when the RX FIFO has reached the specified partially empty threshold."
"enable_port_rx_enh_fifo_cnt","Enable rx_enh_fifo_cnt port","{0 1}","0","Enables the optional rx_enh_fifo_cnt status output port. This signal the indicates the current level of the RX FIFO."
"enable_port_rx_enh_fifo_del","Enable rx_enh_fifo_del port (10GBASE-R)","{0 1}","0","Enables the optional rx_enh_fifo_del status output port. This signal indicates when a word has been deleted from the rate-match FIFO. This signal is used in 10GBASE-R mode only."
"enable_port_rx_enh_fifo_insert","Enable rx_enh_fifo_insert port (10GBASE-R)","{0 1}","0","Enables the optional rx_enh_fifo_insert status output port. This signal indicates when a word has been inserted into the rate-match FIFO. This signal is used in 10GBASE-R mode only."
"enable_port_rx_enh_fifo_rd_en","Enable rx_enh_fifo_rd_en port","{0 1}","0","Enables the optional rx_enh_fifo_rd_en control input port. This port is used for Interlaken and Basic FIFO modes. Asserting this signal reads a word from the RX FIFO."
"enable_port_rx_enh_fifo_align_val","Enable rx_enh_fifo_align_val port (Interlaken)","{0 1}","0","Enables the optional rx_enh_fifo_align_val status output port. This port is used for Interlaken only."
"enable_port_rx_enh_fifo_align_clr","Enable rx_enh_fifo_align_clr port (Interlaken)","{0 1}","0","Enables the optional rx_enh_fifo_align_clr control input port. This port is used for Interlaken mode only."
"enh_tx_frmgen_enable","Enable Interlaken frame generator","{0 1}","0","Enables the Interlaken frame generator in the Enhanced PCS."
"enh_tx_frmgen_mfrm_length","Frame generator metaframe length","0:8192","2048","Specifies the Interlaken metaframe length for the frame generator."
"enh_tx_frmgen_burst_enable","Enable frame generator burst control","{0 1}","0","Enables burst control in the Interlaken frame generator. When enabled, the "tx_enh_frame_burst_en" port controls the burst behavior of the frame generator. Refer to the user guide for more details."
"enable_port_tx_enh_frame","Enable tx_enh_frame port","{0 1}","0","Enables the tx_enh_frame status output port. When the Interlaken frame generator is enabled this signal indicates the beginning of a new metaframe."
"enable_port_tx_enh_frame_diag_status","Enable tx_enh_frame_diag_status port","{0 1}","0","Enables the tx_enh_frame_diag_status control input port. When the Interlaken frame generator is enabled the value of this signal contains the 'Status Message' from the framing layer 'Diagnostic Word'. Refer to the user guide for more details."
"enable_port_tx_enh_frame_burst_en","Enable tx_enh_frame_burst_en port","{0 1}","0","Enables the tx_enh_frame_burst_en control input port. When burst control is enabled for the Interlaken frame generator, the assertion of this signal controls frame generator data reads from the TX FIFO. Refer to the user guide for more details."
"enh_rx_frmsync_enable","Enable Interlaken frame synchronizer","{0 1}","0","Enables the Interlaken frame synchronizer in the Enhanced PCS."
"enh_rx_frmsync_mfrm_length","Frame synchronizer metaframe length","0:8192","2048","Specifies the Interlaken metaframe length for the frame synchronizer."
"enable_port_rx_enh_frame","Enable rx_enh_frame port","{0 1}","0","Enables the rx_enh_frame status output port. When the Interlaken frame synchronizer is enabled this signal indicates the beginning of a new metaframe."
"enable_port_rx_enh_frame_lock","Enable rx_enh_frame_lock port","{0 1}","0","Enables the rx_enh_frame_lock status output port. When the Interlaken frame synchronizer is enabled the assertion of this signal indicates that the frame synchronizer has acheived metaframe delineation. This is an asynchronous output signal."
"enable_port_rx_enh_frame_diag_status","Enable rx_enh_frame_diag_status port","{0 1}","0","Enables the rx_enh_frame_diag_status status output port. When the Interlaken frame synchronizer is enabled This two-bit per lane output signal contains the value of the framing layer diagnostic word (bits[33:32]). This signal is latched when a valid diagnostic word is received."
"enh_tx_crcgen_enable","Enable Interlaken TX CRC-32 generator","{0 1}","0","Enables the Interlaken CRC-32 generator. This can be used as a dignostic tool. The CRC includes the entire metaframe including the diagnostic word."
"enh_tx_crcerr_enable","Enable Interlaken TX CRC-32 generator error insertion","{0 1}","0","Enables error insertion for the Interlaken CRC-32 generator. Error insertion is cycle-accurate. When enabled, the assertion of tx_control[8] inserts an error on that corresponding data word."
"enh_rx_crcchk_enable","Enable Interlaken RX CRC-32 checker","{0 1}","0","Enables the Interlaken CRC-32 checker."
"enable_port_rx_enh_crc32_err","Enable rx_enh_crc32_err port","{0 1}","0","Enables the optional rx_enh_crc32_err status output port. When the Interlaken CRC-32 checker is enabled the assertion of this signal indicates the detection of a CRC error in the metaframe."
"enable_port_rx_enh_highber","Enable rx_enh_highber port (10GBASE-R)","{0 1}","0","Enables the optional rx_enh_highber status output port. In 10GBASE-R mode the assertion of this signal indicates a bit-error rate higher then 10^-4. For the 10GBASE-R specification this occurs when there are at least 16 errors within 125us."
"enable_port_rx_enh_highber_clr_cnt","Enable rx_enh_highber_clr_cnt port (10GBASE-R)","{0 1}","0","Enables the optional rx_enh_highber_clr_cnt control input port. In 10GBASE-R mode the assertion of this signal clears the internal counter for the number of times the BER state machine has entered the "BER_BAD_SH" state."
"enable_port_rx_enh_clr_errblk_count","Enable rx_enh_clr_errblk_count port (10GBASE-R & FEC)","{0 1}","0","Enables the optional rx_enh_clr_errblk_count control input port. In 10GBASE-R mode, the assertion of this signal clears the internal counter for the number of times the RX state machine has entered the "RX_E" state. In modes where the FEC block is enabled, the assertion of this signal resets the status counters within the RX FEC block."
"enh_tx_64b66b_enable","Enable TX 64b/66b encoder","{0 1}","0","Enables the 64b/66b encoder."
"enh_rx_64b66b_enable","Enable RX 64b/66b decoder","{0 1}","0","Enables the 64b/66b decoder."
"enh_tx_sh_err","Enable TX sync header error insertion","{0 1}","0","Enables 64b/66b sync header error insertion for 10GBASE-R or Interlaken."
"enh_tx_scram_enable","Enable TX scrambler (10GBASE-R/Interlaken)","{0 1}","0","Enables the TX data scrambler for 10GBASE-R and Interlaken. Refer to the user guide for further details."
"enh_tx_scram_seed","TX scrambler seed (10GBASE-R/Interlaken)","","0","Specifies the initial seed for the 10GBASE-R / Interlaken scrambler."
"enh_rx_descram_enable","Enable RX descrambler (10GBASE-R/Interlaken)","{0 1}","0","Enables the RX data descrambler for 10GBASE-R and Interlaken. Refer to the user guide for further details."
"enh_tx_dispgen_enable","Enable Interlaken TX disparity generator","{0 1}","0","Enables the Interlaken disparity generator."
"enh_rx_dispchk_enable","Enable Interlaken RX disparity checker","{0 1}","0","Enables the Interlaken disparity checker."
"enh_tx_randomdispbit_enable","Enable Interlaken TX random disparity bit","{0 1}","0","Enables the Interlaken random disparity bit. When enabled a random number is used as disparity bit which saves 1 cycle of latency."
"enh_rx_blksync_enable","Enable RX block synchronizer","{0 1}","0","Enables the block synchronizer for the 10G RX PCS. Primariliy used in Interlaken and 10GBASE-R modes."
"enable_port_rx_enh_blk_lock","Enable rx_enh_blk_lock port","{0 1}","0","Enables the optional enable_port_rx_enh_blk_lock status output port. When the block synchronizer is enabled the assertion of this signal indicates that block delineation has been achieved. This is an asynchronous output signal."
"enh_tx_bitslip_enable","Enable TX data bitslip","{0 1}","0","Enables TX bitslip support for the Enhanced TX PCS datapath. When enabled, the tx_enh_bitslip port controls the number of bit locations to slip the TX parallel data before passing to the PMA."
"enh_tx_polinv_enable","Enable TX data polarity inversion","{0 1}","0","Enables TX bit polarity inversion for the Enhanced TX PCS datapath. When enabled, the TX parallel data bits are inverted before passing to the PMA."
"enh_rx_bitslip_enable","Enable RX data bitslip","{0 1}","0","Enables RX bitslip support for the Enhanced RX PCS datapath. When enabled, the rising edge assertion of the rx_bitslip port causes the RX parallel data from the PMA to slip by one bit before passing to the PCS."
"enh_rx_polinv_enable","Enable RX data polarity inversion","{0 1}","0","Enables RX bit polarity inversion for the Enhanced RX PCS datapath. When enabled, the RX parallel data bits are inverted before passing from the PMA to the PCS."
"enable_port_tx_enh_bitslip","Enable tx_enh_bitslip port","{0 1}","0","Enables the optional tx_enh_bitslip control input port. When TX bitslip support is enabled for the 10G PCS the value of this signal controls the number bit locations to slip the TX parallel data before passing to the PMA."
"enable_port_rx_enh_bitslip","Enable rx_bitslip port","{0 1}","0","Enables the optional rx_bitslip control input port. When RX bitslip support is enabled for the 10G PCS; a rising edge on this signal causes the RX parallel data to be slipped by one bit location after passing from the PMA. This is the shared RX bitslip control port for the Standard and Enhanced PCS datapaths."
"enh_rx_krfec_err_mark_enable","Enable RX KR-FEC error marking","{0 1}","0","Enables the optional error marking feature of the KR-FEC decoder. When enabled, if an uncorrectable error is detected by the decoder, both sync data bits are asserted (2'b11) to indicate the uncorrectable error. This feature increases latency through the KR-FEC decoder."
"enh_rx_krfec_err_mark_type","Error marking type","10G 40G","10G","Specifies the error marking type (10G or 40G)."
"enh_tx_krfec_burst_err_enable","Enable KR-FEC TX error insertion","{0 1}","0","Enables the optional error insertion feature of the KR-FEC encoder. This feature allows the user to insert errors by corrupting the data starting at bit 0 of the current word."
"enh_tx_krfec_burst_err_len","KR-FEC TX error insertion spacing","1:15","1","Specifies the spacing of the KR-FEC TX error insertions. KR-FEC can insert 1-bit to 15-bit spaced errors."
"enable_port_krfec_tx_enh_frame","Enable tx_enh_frame port","{0 1}","0","Enables the tx_enh_frame status output port. Asynchronous status flag output of TX KRFEC that signifies the beginning of generated KRFEC frame."
"enable_port_krfec_rx_enh_frame","Enable rx_enh_frame port","{0 1}","0","Enables the rx_enh_frame status output port. Asynchronous status flag output of RX KRFEC that signifies the beginning of a received KRFEC frame."
"enable_port_krfec_rx_enh_frame_diag_status","Enable rx_enh_frame_diag_status port","{0 1}","0","Enables the rx_enh_frame_diag_status status output port. Asynchronous status flag output of RX KRFEC that indicates the status of the current received frame. 00: No error 01 Correctable error 10: Uncorrectable error 11: Reset condition/pre-lock condition."
"generate_docs","Generate parameter documentation file","{0 1}","0","When enabled, generation produces a Comma-Separated Value file (.csv) with descriptions of the Native PHY parameters."
"rcfg_enable","Enable dynamic reconfiguration","{0 1}","0","Enables the dynamic reconfiguration interface."
"rcfg_shared","Share reconfiguration interface","{0 1}","0","When enabled, the Native PHY presents a single Avalon-MM slave interface for dynamic reconfiguration of all channels. In this configuration the upper [n:9] address bits of the reconfiguration address bus specify the selected channel. Address bits [8:0] provide the register offset address within the reconfiguration space of the selected channel."
"rcfg_jtag_enable","Enable Altera Debug Master Endpoint","{0 1}","0","When enabled, the Native PHY includes an embedded Altera Debug Master Endpoint that connects internally Avalon-MM slave interface. The ADME can access the reconfiguration space of the transceiver. It can perform certain test and debug functions via JTAG using the System Console. This option requires you to enable the "Share reconfiguration interface" option for configurations using more than 1 channel and may also require that a jtag_debug link be included in the system."
"rcfg_separate_avmm_busy","Separate reconfig_waitrequest from the status of AVMM arbitration with PreSICE","{0 1}","0","When enabled, the reconfig_waitrequest will not indicate the status of AVMM arbitration with PreSICE.  The AVMM arbitration status will be reflected in a soft status register bit.  This feature requires that the "Enable control and status registers" feature under "Optional Reconfiguration Logic" be enabled.  For more information, please refer to the User Guide."
"rcfg_enable_avmm_busy_port","Enable avmm_busy port","{0 1}","0","Enable the port for avmm_busy"
"enable_pcie_dfe_ip","Enable PICe DFE IP","","false","Enable the DFE IP for the PCIe Protocol."
"sim_reduced_counters","Enable fast sim","","false","Enables reduced counter values for simulation purposes.  Do not enable for compilation, as it will impact hardware."
"disable_continuous_dfe","Disable DFE Continuous","","false","Disables continuous DFE mode."
"set_embedded_debug_enable","Enable embedded debug","{0 1}","0","Enables the embedded debug logic in the transceiver channel and grants access to capability registers, soft prbs accumulators and control and status registers"
"set_capability_reg_enable","Enable capability registers","{0 1}","0","Enables capability registers, which provide high level information about the transceiver channel's configuration."
"set_user_identifier","Set user-defined IP identifier","0:255","0","Sets a user-defined numeric identifier that can be read from the user_identifer offset when the capability registers are enabled."
"set_csr_soft_logic_enable","Enable control and status registers","{0 1}","0","Enables soft registers for reading status signals and writing control signals on the phy interface through the embedded debug. Signals include rx_is_locktoref, rx_is_locktodata, tx_cal_busy, rx_cal_busy, rx_serial_loopback, set_rx_locktodata, set_rx_locktoref, tx_analogreset, tx_digitalreset, rx_analogreset and rx_digitalreset. For more information, please refer to the User Guide."
"set_prbs_soft_logic_enable","Enable PRBS soft accumulators","{0 1}","0","Enables soft logic for doing prbs bit and error accumulation when using the hard prbs generator and checker."
"set_odi_soft_logic_enable","Enable ODI acceleration logic","{0 1}","0","Enables soft logic for accelerating bit and error accumulation when using ODI."
"rcfg_file_prefix","Configuration file prefix","","altera_xcvr_native_a10","Specifies the file prefix used for generating configuration files. Each variant of the Native PHY should use a unique prefix for configuration files."
"rcfg_sv_file_enable","Generate SystemVerilog package file","{0 1}","0","When enabled, The Native PHY generates a SystemVerilog package file, "<rcfg_file_prefix>_reconfig_parameters.sv", containing parameters defined with the attribute values needed for reconfiguration."
"rcfg_h_file_enable","Generate C header file","{0 1}","0","When enabled, The Native PHY generates a C header file, "<rcfg_file_prefix>_reconfig_parameters.h", containing macros defined with the attribute values needed for reconfiguration."
"rcfg_mif_file_enable","Generate MIF (Memory Initialization File)","{0 1}","0","When enabled, The Native PHY generates a MIF (Memory Initialization File), "<rcfg_file_prefix>_reconfig_parameters.mif", containing the attribute values needed for reconfiguration in a data format."
"rcfg_multi_enable","Enable multiple reconfiguration profiles","{0 1}","0","When enabled, you can use the GUI to store multiple configurations. This information is used by Quartus to include the necessary timing arcs for all configurations during timing driven compilation. The Native PHY generates reconfiguration files for all of the stored profiles. The Native PHY also checks your multiple reconfiguration profiles for consistency to ensure you can reconfigure between them. Among other things this checks that you have exposed the same ports for each configuration."
"enable_analog_settings","Include PMA analog settings in configuration files","{0 1}","0","When enabled, the IP allows you to configure the analog settings for the PMA. These settings will be included in your generated configuration files. NOTE - You must still specify the analog settings for your current configuration using Quartus II Setting File (.qsf) assignments in Quartus. This option does not remove the requirement to specify Quartus II Setting File (.qsf) assignments for your analog settings."
