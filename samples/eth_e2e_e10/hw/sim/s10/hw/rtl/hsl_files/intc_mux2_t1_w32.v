// Copyright 2010-2018 Altera Corporation. All rights reserved.
// Altera products are protected under numerous U.S. and foreign patents, 
// maskwork rights, copyrights and other intellectual property laws.  
//
// This reference design file, and your use thereof, is subject to and governed
// by the terms and conditions of the applicable Altera Reference Design 
// License Agreement (either as signed by you or found at www.altera.com).  By
// using this reference design file, you indicate your acceptance of such terms
// and conditions between you and Altera Corporation.  In the event that you do
// not agree with such terms and conditions, you may not use the reference 
// design file and please promptly destroy any copies you have made.
//
// This reference design file is being provided on an "as-is" basis and as an 
// accommodation and therefore all warranties, representations or guarantees of 
// any kind (whether express, implied or statutory) including, without 
// limitation, warranties of merchantability, non-infringement, or fitness for
// a particular purpose, are specifically disclaimed.  By making this reference
// design file available, Altera expressly does not recommend, suggest or 
// require that this reference design file be used in combination with any 
// other product not provided by Altera.
/////////////////////////////////////////////////////////////////////////////

`timescale 1ps/1ps

// Generated by one of Gregg's toys.   Share And Enjoy.
// Executable compiled May 18 2018 10:06:39
// This file was generated 11/02/2018 13:30:07

// Pipelined MUX
// 2:1 MUX, latency 1 ticks
// using words of 32 bits

module intc_mux2_t1_w32 #(
    parameter SIM_EMULATE = 1'b0
) (
    input clk,
    input [63:0] din,  // sel=0 takes from least significant word
    input sel,
    output [31:0] dout
);

// this is something we can eat in a LUT
wire [31:0] dout_w;

generate
    if (SIM_EMULATE) begin : gen_s10c_0
        wire [63:0] local_mask = 64'hff00f0f0ccccaaaa;
        wire [5:0] local_din = {1'b0,sel,1'b0,1'b0,din[32],din[0]};
        assign dout_w[0] = local_mask [local_din];
    end else begin
        //Note: the S5 cell is 99% the same, and compatible
        //stratixv_lcell_comb s5c (
 
        fourteennm_lcell_comb  #(
            .lut_mask(64'hff00f0f0ccccaaaa),
            .shared_arith("off"),
            .extended_lut("off")
        ) s10c_0 (
            .dataa (din[0]),
            .datab (din[32]),
            .datac (1'b0),
            .datad (1'b0),
            .datae (sel),
            .dataf (1'b0),
            .datag(1'b1),
            
            .cin(1'b1),
            
            
            // synthesis translate_off
            // this is for stratix 10 (fourteen) but not the others
            .datah(1'b1),
                        
            // this does not exist in S10, but is partially there in the models right this second
            .sharein(1'b0),
            // synthesis translate_on
            
            .sumout(),.cout(),.shareout(),
            .combout(dout_w[0])
        );
    end
endgenerate


generate
    if (SIM_EMULATE) begin : gen_s10c_1
        wire [63:0] local_mask = 64'hff00f0f0ccccaaaa;
        wire [5:0] local_din = {1'b0,sel,1'b0,1'b0,din[33],din[1]};
        assign dout_w[1] = local_mask [local_din];
    end else begin
        //Note: the S5 cell is 99% the same, and compatible
        //stratixv_lcell_comb s5c (
 
        fourteennm_lcell_comb  #(
            .lut_mask(64'hff00f0f0ccccaaaa),
            .shared_arith("off"),
            .extended_lut("off")
        ) s10c_1 (
            .dataa (din[1]),
            .datab (din[33]),
            .datac (1'b0),
            .datad (1'b0),
            .datae (sel),
            .dataf (1'b0),
            .datag(1'b1),
            
            .cin(1'b1),
            
            
            // synthesis translate_off
            // this is for stratix 10 (fourteen) but not the others
            .datah(1'b1),
                        
            // this does not exist in S10, but is partially there in the models right this second
            .sharein(1'b0),
            // synthesis translate_on
            
            .sumout(),.cout(),.shareout(),
            .combout(dout_w[1])
        );
    end
endgenerate


generate
    if (SIM_EMULATE) begin : gen_s10c_2
        wire [63:0] local_mask = 64'hff00f0f0ccccaaaa;
        wire [5:0] local_din = {1'b0,sel,1'b0,1'b0,din[34],din[2]};
        assign dout_w[2] = local_mask [local_din];
    end else begin
        //Note: the S5 cell is 99% the same, and compatible
        //stratixv_lcell_comb s5c (
 
        fourteennm_lcell_comb  #(
            .lut_mask(64'hff00f0f0ccccaaaa),
            .shared_arith("off"),
            .extended_lut("off")
        ) s10c_2 (
            .dataa (din[2]),
            .datab (din[34]),
            .datac (1'b0),
            .datad (1'b0),
            .datae (sel),
            .dataf (1'b0),
            .datag(1'b1),
            
            .cin(1'b1),
            
            
            // synthesis translate_off
            // this is for stratix 10 (fourteen) but not the others
            .datah(1'b1),
                        
            // this does not exist in S10, but is partially there in the models right this second
            .sharein(1'b0),
            // synthesis translate_on
            
            .sumout(),.cout(),.shareout(),
            .combout(dout_w[2])
        );
    end
endgenerate


generate
    if (SIM_EMULATE) begin : gen_s10c_3
        wire [63:0] local_mask = 64'hff00f0f0ccccaaaa;
        wire [5:0] local_din = {1'b0,sel,1'b0,1'b0,din[35],din[3]};
        assign dout_w[3] = local_mask [local_din];
    end else begin
        //Note: the S5 cell is 99% the same, and compatible
        //stratixv_lcell_comb s5c (
 
        fourteennm_lcell_comb  #(
            .lut_mask(64'hff00f0f0ccccaaaa),
            .shared_arith("off"),
            .extended_lut("off")
        ) s10c_3 (
            .dataa (din[3]),
            .datab (din[35]),
            .datac (1'b0),
            .datad (1'b0),
            .datae (sel),
            .dataf (1'b0),
            .datag(1'b1),
            
            .cin(1'b1),
            
            
            // synthesis translate_off
            // this is for stratix 10 (fourteen) but not the others
            .datah(1'b1),
                        
            // this does not exist in S10, but is partially there in the models right this second
            .sharein(1'b0),
            // synthesis translate_on
            
            .sumout(),.cout(),.shareout(),
            .combout(dout_w[3])
        );
    end
endgenerate


generate
    if (SIM_EMULATE) begin : gen_s10c_4
        wire [63:0] local_mask = 64'hff00f0f0ccccaaaa;
        wire [5:0] local_din = {1'b0,sel,1'b0,1'b0,din[36],din[4]};
        assign dout_w[4] = local_mask [local_din];
    end else begin
        //Note: the S5 cell is 99% the same, and compatible
        //stratixv_lcell_comb s5c (
 
        fourteennm_lcell_comb  #(
            .lut_mask(64'hff00f0f0ccccaaaa),
            .shared_arith("off"),
            .extended_lut("off")
        ) s10c_4 (
            .dataa (din[4]),
            .datab (din[36]),
            .datac (1'b0),
            .datad (1'b0),
            .datae (sel),
            .dataf (1'b0),
            .datag(1'b1),
            
            .cin(1'b1),
            
            
            // synthesis translate_off
            // this is for stratix 10 (fourteen) but not the others
            .datah(1'b1),
                        
            // this does not exist in S10, but is partially there in the models right this second
            .sharein(1'b0),
            // synthesis translate_on
            
            .sumout(),.cout(),.shareout(),
            .combout(dout_w[4])
        );
    end
endgenerate


generate
    if (SIM_EMULATE) begin : gen_s10c_5
        wire [63:0] local_mask = 64'hff00f0f0ccccaaaa;
        wire [5:0] local_din = {1'b0,sel,1'b0,1'b0,din[37],din[5]};
        assign dout_w[5] = local_mask [local_din];
    end else begin
        //Note: the S5 cell is 99% the same, and compatible
        //stratixv_lcell_comb s5c (
 
        fourteennm_lcell_comb  #(
            .lut_mask(64'hff00f0f0ccccaaaa),
            .shared_arith("off"),
            .extended_lut("off")
        ) s10c_5 (
            .dataa (din[5]),
            .datab (din[37]),
            .datac (1'b0),
            .datad (1'b0),
            .datae (sel),
            .dataf (1'b0),
            .datag(1'b1),
            
            .cin(1'b1),
            
            
            // synthesis translate_off
            // this is for stratix 10 (fourteen) but not the others
            .datah(1'b1),
                        
            // this does not exist in S10, but is partially there in the models right this second
            .sharein(1'b0),
            // synthesis translate_on
            
            .sumout(),.cout(),.shareout(),
            .combout(dout_w[5])
        );
    end
endgenerate


generate
    if (SIM_EMULATE) begin : gen_s10c_6
        wire [63:0] local_mask = 64'hff00f0f0ccccaaaa;
        wire [5:0] local_din = {1'b0,sel,1'b0,1'b0,din[38],din[6]};
        assign dout_w[6] = local_mask [local_din];
    end else begin
        //Note: the S5 cell is 99% the same, and compatible
        //stratixv_lcell_comb s5c (
 
        fourteennm_lcell_comb  #(
            .lut_mask(64'hff00f0f0ccccaaaa),
            .shared_arith("off"),
            .extended_lut("off")
        ) s10c_6 (
            .dataa (din[6]),
            .datab (din[38]),
            .datac (1'b0),
            .datad (1'b0),
            .datae (sel),
            .dataf (1'b0),
            .datag(1'b1),
            
            .cin(1'b1),
            
            
            // synthesis translate_off
            // this is for stratix 10 (fourteen) but not the others
            .datah(1'b1),
                        
            // this does not exist in S10, but is partially there in the models right this second
            .sharein(1'b0),
            // synthesis translate_on
            
            .sumout(),.cout(),.shareout(),
            .combout(dout_w[6])
        );
    end
endgenerate


generate
    if (SIM_EMULATE) begin : gen_s10c_7
        wire [63:0] local_mask = 64'hff00f0f0ccccaaaa;
        wire [5:0] local_din = {1'b0,sel,1'b0,1'b0,din[39],din[7]};
        assign dout_w[7] = local_mask [local_din];
    end else begin
        //Note: the S5 cell is 99% the same, and compatible
        //stratixv_lcell_comb s5c (
 
        fourteennm_lcell_comb  #(
            .lut_mask(64'hff00f0f0ccccaaaa),
            .shared_arith("off"),
            .extended_lut("off")
        ) s10c_7 (
            .dataa (din[7]),
            .datab (din[39]),
            .datac (1'b0),
            .datad (1'b0),
            .datae (sel),
            .dataf (1'b0),
            .datag(1'b1),
            
            .cin(1'b1),
            
            
            // synthesis translate_off
            // this is for stratix 10 (fourteen) but not the others
            .datah(1'b1),
                        
            // this does not exist in S10, but is partially there in the models right this second
            .sharein(1'b0),
            // synthesis translate_on
            
            .sumout(),.cout(),.shareout(),
            .combout(dout_w[7])
        );
    end
endgenerate


generate
    if (SIM_EMULATE) begin : gen_s10c_8
        wire [63:0] local_mask = 64'hff00f0f0ccccaaaa;
        wire [5:0] local_din = {1'b0,sel,1'b0,1'b0,din[40],din[8]};
        assign dout_w[8] = local_mask [local_din];
    end else begin
        //Note: the S5 cell is 99% the same, and compatible
        //stratixv_lcell_comb s5c (
 
        fourteennm_lcell_comb  #(
            .lut_mask(64'hff00f0f0ccccaaaa),
            .shared_arith("off"),
            .extended_lut("off")
        ) s10c_8 (
            .dataa (din[8]),
            .datab (din[40]),
            .datac (1'b0),
            .datad (1'b0),
            .datae (sel),
            .dataf (1'b0),
            .datag(1'b1),
            
            .cin(1'b1),
            
            
            // synthesis translate_off
            // this is for stratix 10 (fourteen) but not the others
            .datah(1'b1),
                        
            // this does not exist in S10, but is partially there in the models right this second
            .sharein(1'b0),
            // synthesis translate_on
            
            .sumout(),.cout(),.shareout(),
            .combout(dout_w[8])
        );
    end
endgenerate


generate
    if (SIM_EMULATE) begin : gen_s10c_9
        wire [63:0] local_mask = 64'hff00f0f0ccccaaaa;
        wire [5:0] local_din = {1'b0,sel,1'b0,1'b0,din[41],din[9]};
        assign dout_w[9] = local_mask [local_din];
    end else begin
        //Note: the S5 cell is 99% the same, and compatible
        //stratixv_lcell_comb s5c (
 
        fourteennm_lcell_comb  #(
            .lut_mask(64'hff00f0f0ccccaaaa),
            .shared_arith("off"),
            .extended_lut("off")
        ) s10c_9 (
            .dataa (din[9]),
            .datab (din[41]),
            .datac (1'b0),
            .datad (1'b0),
            .datae (sel),
            .dataf (1'b0),
            .datag(1'b1),
            
            .cin(1'b1),
            
            
            // synthesis translate_off
            // this is for stratix 10 (fourteen) but not the others
            .datah(1'b1),
                        
            // this does not exist in S10, but is partially there in the models right this second
            .sharein(1'b0),
            // synthesis translate_on
            
            .sumout(),.cout(),.shareout(),
            .combout(dout_w[9])
        );
    end
endgenerate


generate
    if (SIM_EMULATE) begin : gen_s10c_10
        wire [63:0] local_mask = 64'hff00f0f0ccccaaaa;
        wire [5:0] local_din = {1'b0,sel,1'b0,1'b0,din[42],din[10]};
        assign dout_w[10] = local_mask [local_din];
    end else begin
        //Note: the S5 cell is 99% the same, and compatible
        //stratixv_lcell_comb s5c (
 
        fourteennm_lcell_comb  #(
            .lut_mask(64'hff00f0f0ccccaaaa),
            .shared_arith("off"),
            .extended_lut("off")
        ) s10c_10 (
            .dataa (din[10]),
            .datab (din[42]),
            .datac (1'b0),
            .datad (1'b0),
            .datae (sel),
            .dataf (1'b0),
            .datag(1'b1),
            
            .cin(1'b1),
            
            
            // synthesis translate_off
            // this is for stratix 10 (fourteen) but not the others
            .datah(1'b1),
                        
            // this does not exist in S10, but is partially there in the models right this second
            .sharein(1'b0),
            // synthesis translate_on
            
            .sumout(),.cout(),.shareout(),
            .combout(dout_w[10])
        );
    end
endgenerate


generate
    if (SIM_EMULATE) begin : gen_s10c_11
        wire [63:0] local_mask = 64'hff00f0f0ccccaaaa;
        wire [5:0] local_din = {1'b0,sel,1'b0,1'b0,din[43],din[11]};
        assign dout_w[11] = local_mask [local_din];
    end else begin
        //Note: the S5 cell is 99% the same, and compatible
        //stratixv_lcell_comb s5c (
 
        fourteennm_lcell_comb  #(
            .lut_mask(64'hff00f0f0ccccaaaa),
            .shared_arith("off"),
            .extended_lut("off")
        ) s10c_11 (
            .dataa (din[11]),
            .datab (din[43]),
            .datac (1'b0),
            .datad (1'b0),
            .datae (sel),
            .dataf (1'b0),
            .datag(1'b1),
            
            .cin(1'b1),
            
            
            // synthesis translate_off
            // this is for stratix 10 (fourteen) but not the others
            .datah(1'b1),
                        
            // this does not exist in S10, but is partially there in the models right this second
            .sharein(1'b0),
            // synthesis translate_on
            
            .sumout(),.cout(),.shareout(),
            .combout(dout_w[11])
        );
    end
endgenerate


generate
    if (SIM_EMULATE) begin : gen_s10c_12
        wire [63:0] local_mask = 64'hff00f0f0ccccaaaa;
        wire [5:0] local_din = {1'b0,sel,1'b0,1'b0,din[44],din[12]};
        assign dout_w[12] = local_mask [local_din];
    end else begin
        //Note: the S5 cell is 99% the same, and compatible
        //stratixv_lcell_comb s5c (
 
        fourteennm_lcell_comb  #(
            .lut_mask(64'hff00f0f0ccccaaaa),
            .shared_arith("off"),
            .extended_lut("off")
        ) s10c_12 (
            .dataa (din[12]),
            .datab (din[44]),
            .datac (1'b0),
            .datad (1'b0),
            .datae (sel),
            .dataf (1'b0),
            .datag(1'b1),
            
            .cin(1'b1),
            
            
            // synthesis translate_off
            // this is for stratix 10 (fourteen) but not the others
            .datah(1'b1),
                        
            // this does not exist in S10, but is partially there in the models right this second
            .sharein(1'b0),
            // synthesis translate_on
            
            .sumout(),.cout(),.shareout(),
            .combout(dout_w[12])
        );
    end
endgenerate


generate
    if (SIM_EMULATE) begin : gen_s10c_13
        wire [63:0] local_mask = 64'hff00f0f0ccccaaaa;
        wire [5:0] local_din = {1'b0,sel,1'b0,1'b0,din[45],din[13]};
        assign dout_w[13] = local_mask [local_din];
    end else begin
        //Note: the S5 cell is 99% the same, and compatible
        //stratixv_lcell_comb s5c (
 
        fourteennm_lcell_comb  #(
            .lut_mask(64'hff00f0f0ccccaaaa),
            .shared_arith("off"),
            .extended_lut("off")
        ) s10c_13 (
            .dataa (din[13]),
            .datab (din[45]),
            .datac (1'b0),
            .datad (1'b0),
            .datae (sel),
            .dataf (1'b0),
            .datag(1'b1),
            
            .cin(1'b1),
            
            
            // synthesis translate_off
            // this is for stratix 10 (fourteen) but not the others
            .datah(1'b1),
                        
            // this does not exist in S10, but is partially there in the models right this second
            .sharein(1'b0),
            // synthesis translate_on
            
            .sumout(),.cout(),.shareout(),
            .combout(dout_w[13])
        );
    end
endgenerate


generate
    if (SIM_EMULATE) begin : gen_s10c_14
        wire [63:0] local_mask = 64'hff00f0f0ccccaaaa;
        wire [5:0] local_din = {1'b0,sel,1'b0,1'b0,din[46],din[14]};
        assign dout_w[14] = local_mask [local_din];
    end else begin
        //Note: the S5 cell is 99% the same, and compatible
        //stratixv_lcell_comb s5c (
 
        fourteennm_lcell_comb  #(
            .lut_mask(64'hff00f0f0ccccaaaa),
            .shared_arith("off"),
            .extended_lut("off")
        ) s10c_14 (
            .dataa (din[14]),
            .datab (din[46]),
            .datac (1'b0),
            .datad (1'b0),
            .datae (sel),
            .dataf (1'b0),
            .datag(1'b1),
            
            .cin(1'b1),
            
            
            // synthesis translate_off
            // this is for stratix 10 (fourteen) but not the others
            .datah(1'b1),
                        
            // this does not exist in S10, but is partially there in the models right this second
            .sharein(1'b0),
            // synthesis translate_on
            
            .sumout(),.cout(),.shareout(),
            .combout(dout_w[14])
        );
    end
endgenerate


generate
    if (SIM_EMULATE) begin : gen_s10c_15
        wire [63:0] local_mask = 64'hff00f0f0ccccaaaa;
        wire [5:0] local_din = {1'b0,sel,1'b0,1'b0,din[47],din[15]};
        assign dout_w[15] = local_mask [local_din];
    end else begin
        //Note: the S5 cell is 99% the same, and compatible
        //stratixv_lcell_comb s5c (
 
        fourteennm_lcell_comb  #(
            .lut_mask(64'hff00f0f0ccccaaaa),
            .shared_arith("off"),
            .extended_lut("off")
        ) s10c_15 (
            .dataa (din[15]),
            .datab (din[47]),
            .datac (1'b0),
            .datad (1'b0),
            .datae (sel),
            .dataf (1'b0),
            .datag(1'b1),
            
            .cin(1'b1),
            
            
            // synthesis translate_off
            // this is for stratix 10 (fourteen) but not the others
            .datah(1'b1),
                        
            // this does not exist in S10, but is partially there in the models right this second
            .sharein(1'b0),
            // synthesis translate_on
            
            .sumout(),.cout(),.shareout(),
            .combout(dout_w[15])
        );
    end
endgenerate


generate
    if (SIM_EMULATE) begin : gen_s10c_16
        wire [63:0] local_mask = 64'hff00f0f0ccccaaaa;
        wire [5:0] local_din = {1'b0,sel,1'b0,1'b0,din[48],din[16]};
        assign dout_w[16] = local_mask [local_din];
    end else begin
        //Note: the S5 cell is 99% the same, and compatible
        //stratixv_lcell_comb s5c (
 
        fourteennm_lcell_comb  #(
            .lut_mask(64'hff00f0f0ccccaaaa),
            .shared_arith("off"),
            .extended_lut("off")
        ) s10c_16 (
            .dataa (din[16]),
            .datab (din[48]),
            .datac (1'b0),
            .datad (1'b0),
            .datae (sel),
            .dataf (1'b0),
            .datag(1'b1),
            
            .cin(1'b1),
            
            
            // synthesis translate_off
            // this is for stratix 10 (fourteen) but not the others
            .datah(1'b1),
                        
            // this does not exist in S10, but is partially there in the models right this second
            .sharein(1'b0),
            // synthesis translate_on
            
            .sumout(),.cout(),.shareout(),
            .combout(dout_w[16])
        );
    end
endgenerate


generate
    if (SIM_EMULATE) begin : gen_s10c_17
        wire [63:0] local_mask = 64'hff00f0f0ccccaaaa;
        wire [5:0] local_din = {1'b0,sel,1'b0,1'b0,din[49],din[17]};
        assign dout_w[17] = local_mask [local_din];
    end else begin
        //Note: the S5 cell is 99% the same, and compatible
        //stratixv_lcell_comb s5c (
 
        fourteennm_lcell_comb  #(
            .lut_mask(64'hff00f0f0ccccaaaa),
            .shared_arith("off"),
            .extended_lut("off")
        ) s10c_17 (
            .dataa (din[17]),
            .datab (din[49]),
            .datac (1'b0),
            .datad (1'b0),
            .datae (sel),
            .dataf (1'b0),
            .datag(1'b1),
            
            .cin(1'b1),
            
            
            // synthesis translate_off
            // this is for stratix 10 (fourteen) but not the others
            .datah(1'b1),
                        
            // this does not exist in S10, but is partially there in the models right this second
            .sharein(1'b0),
            // synthesis translate_on
            
            .sumout(),.cout(),.shareout(),
            .combout(dout_w[17])
        );
    end
endgenerate


generate
    if (SIM_EMULATE) begin : gen_s10c_18
        wire [63:0] local_mask = 64'hff00f0f0ccccaaaa;
        wire [5:0] local_din = {1'b0,sel,1'b0,1'b0,din[50],din[18]};
        assign dout_w[18] = local_mask [local_din];
    end else begin
        //Note: the S5 cell is 99% the same, and compatible
        //stratixv_lcell_comb s5c (
 
        fourteennm_lcell_comb  #(
            .lut_mask(64'hff00f0f0ccccaaaa),
            .shared_arith("off"),
            .extended_lut("off")
        ) s10c_18 (
            .dataa (din[18]),
            .datab (din[50]),
            .datac (1'b0),
            .datad (1'b0),
            .datae (sel),
            .dataf (1'b0),
            .datag(1'b1),
            
            .cin(1'b1),
            
            
            // synthesis translate_off
            // this is for stratix 10 (fourteen) but not the others
            .datah(1'b1),
                        
            // this does not exist in S10, but is partially there in the models right this second
            .sharein(1'b0),
            // synthesis translate_on
            
            .sumout(),.cout(),.shareout(),
            .combout(dout_w[18])
        );
    end
endgenerate


generate
    if (SIM_EMULATE) begin : gen_s10c_19
        wire [63:0] local_mask = 64'hff00f0f0ccccaaaa;
        wire [5:0] local_din = {1'b0,sel,1'b0,1'b0,din[51],din[19]};
        assign dout_w[19] = local_mask [local_din];
    end else begin
        //Note: the S5 cell is 99% the same, and compatible
        //stratixv_lcell_comb s5c (
 
        fourteennm_lcell_comb  #(
            .lut_mask(64'hff00f0f0ccccaaaa),
            .shared_arith("off"),
            .extended_lut("off")
        ) s10c_19 (
            .dataa (din[19]),
            .datab (din[51]),
            .datac (1'b0),
            .datad (1'b0),
            .datae (sel),
            .dataf (1'b0),
            .datag(1'b1),
            
            .cin(1'b1),
            
            
            // synthesis translate_off
            // this is for stratix 10 (fourteen) but not the others
            .datah(1'b1),
                        
            // this does not exist in S10, but is partially there in the models right this second
            .sharein(1'b0),
            // synthesis translate_on
            
            .sumout(),.cout(),.shareout(),
            .combout(dout_w[19])
        );
    end
endgenerate


generate
    if (SIM_EMULATE) begin : gen_s10c_20
        wire [63:0] local_mask = 64'hff00f0f0ccccaaaa;
        wire [5:0] local_din = {1'b0,sel,1'b0,1'b0,din[52],din[20]};
        assign dout_w[20] = local_mask [local_din];
    end else begin
        //Note: the S5 cell is 99% the same, and compatible
        //stratixv_lcell_comb s5c (
 
        fourteennm_lcell_comb  #(
            .lut_mask(64'hff00f0f0ccccaaaa),
            .shared_arith("off"),
            .extended_lut("off")
        ) s10c_20 (
            .dataa (din[20]),
            .datab (din[52]),
            .datac (1'b0),
            .datad (1'b0),
            .datae (sel),
            .dataf (1'b0),
            .datag(1'b1),
            
            .cin(1'b1),
            
            
            // synthesis translate_off
            // this is for stratix 10 (fourteen) but not the others
            .datah(1'b1),
                        
            // this does not exist in S10, but is partially there in the models right this second
            .sharein(1'b0),
            // synthesis translate_on
            
            .sumout(),.cout(),.shareout(),
            .combout(dout_w[20])
        );
    end
endgenerate


generate
    if (SIM_EMULATE) begin : gen_s10c_21
        wire [63:0] local_mask = 64'hff00f0f0ccccaaaa;
        wire [5:0] local_din = {1'b0,sel,1'b0,1'b0,din[53],din[21]};
        assign dout_w[21] = local_mask [local_din];
    end else begin
        //Note: the S5 cell is 99% the same, and compatible
        //stratixv_lcell_comb s5c (
 
        fourteennm_lcell_comb  #(
            .lut_mask(64'hff00f0f0ccccaaaa),
            .shared_arith("off"),
            .extended_lut("off")
        ) s10c_21 (
            .dataa (din[21]),
            .datab (din[53]),
            .datac (1'b0),
            .datad (1'b0),
            .datae (sel),
            .dataf (1'b0),
            .datag(1'b1),
            
            .cin(1'b1),
            
            
            // synthesis translate_off
            // this is for stratix 10 (fourteen) but not the others
            .datah(1'b1),
                        
            // this does not exist in S10, but is partially there in the models right this second
            .sharein(1'b0),
            // synthesis translate_on
            
            .sumout(),.cout(),.shareout(),
            .combout(dout_w[21])
        );
    end
endgenerate


generate
    if (SIM_EMULATE) begin : gen_s10c_22
        wire [63:0] local_mask = 64'hff00f0f0ccccaaaa;
        wire [5:0] local_din = {1'b0,sel,1'b0,1'b0,din[54],din[22]};
        assign dout_w[22] = local_mask [local_din];
    end else begin
        //Note: the S5 cell is 99% the same, and compatible
        //stratixv_lcell_comb s5c (
 
        fourteennm_lcell_comb  #(
            .lut_mask(64'hff00f0f0ccccaaaa),
            .shared_arith("off"),
            .extended_lut("off")
        ) s10c_22 (
            .dataa (din[22]),
            .datab (din[54]),
            .datac (1'b0),
            .datad (1'b0),
            .datae (sel),
            .dataf (1'b0),
            .datag(1'b1),
            
            .cin(1'b1),
            
            
            // synthesis translate_off
            // this is for stratix 10 (fourteen) but not the others
            .datah(1'b1),
                        
            // this does not exist in S10, but is partially there in the models right this second
            .sharein(1'b0),
            // synthesis translate_on
            
            .sumout(),.cout(),.shareout(),
            .combout(dout_w[22])
        );
    end
endgenerate


generate
    if (SIM_EMULATE) begin : gen_s10c_23
        wire [63:0] local_mask = 64'hff00f0f0ccccaaaa;
        wire [5:0] local_din = {1'b0,sel,1'b0,1'b0,din[55],din[23]};
        assign dout_w[23] = local_mask [local_din];
    end else begin
        //Note: the S5 cell is 99% the same, and compatible
        //stratixv_lcell_comb s5c (
 
        fourteennm_lcell_comb  #(
            .lut_mask(64'hff00f0f0ccccaaaa),
            .shared_arith("off"),
            .extended_lut("off")
        ) s10c_23 (
            .dataa (din[23]),
            .datab (din[55]),
            .datac (1'b0),
            .datad (1'b0),
            .datae (sel),
            .dataf (1'b0),
            .datag(1'b1),
            
            .cin(1'b1),
            
            
            // synthesis translate_off
            // this is for stratix 10 (fourteen) but not the others
            .datah(1'b1),
                        
            // this does not exist in S10, but is partially there in the models right this second
            .sharein(1'b0),
            // synthesis translate_on
            
            .sumout(),.cout(),.shareout(),
            .combout(dout_w[23])
        );
    end
endgenerate


generate
    if (SIM_EMULATE) begin : gen_s10c_24
        wire [63:0] local_mask = 64'hff00f0f0ccccaaaa;
        wire [5:0] local_din = {1'b0,sel,1'b0,1'b0,din[56],din[24]};
        assign dout_w[24] = local_mask [local_din];
    end else begin
        //Note: the S5 cell is 99% the same, and compatible
        //stratixv_lcell_comb s5c (
 
        fourteennm_lcell_comb  #(
            .lut_mask(64'hff00f0f0ccccaaaa),
            .shared_arith("off"),
            .extended_lut("off")
        ) s10c_24 (
            .dataa (din[24]),
            .datab (din[56]),
            .datac (1'b0),
            .datad (1'b0),
            .datae (sel),
            .dataf (1'b0),
            .datag(1'b1),
            
            .cin(1'b1),
            
            
            // synthesis translate_off
            // this is for stratix 10 (fourteen) but not the others
            .datah(1'b1),
                        
            // this does not exist in S10, but is partially there in the models right this second
            .sharein(1'b0),
            // synthesis translate_on
            
            .sumout(),.cout(),.shareout(),
            .combout(dout_w[24])
        );
    end
endgenerate


generate
    if (SIM_EMULATE) begin : gen_s10c_25
        wire [63:0] local_mask = 64'hff00f0f0ccccaaaa;
        wire [5:0] local_din = {1'b0,sel,1'b0,1'b0,din[57],din[25]};
        assign dout_w[25] = local_mask [local_din];
    end else begin
        //Note: the S5 cell is 99% the same, and compatible
        //stratixv_lcell_comb s5c (
 
        fourteennm_lcell_comb  #(
            .lut_mask(64'hff00f0f0ccccaaaa),
            .shared_arith("off"),
            .extended_lut("off")
        ) s10c_25 (
            .dataa (din[25]),
            .datab (din[57]),
            .datac (1'b0),
            .datad (1'b0),
            .datae (sel),
            .dataf (1'b0),
            .datag(1'b1),
            
            .cin(1'b1),
            
            
            // synthesis translate_off
            // this is for stratix 10 (fourteen) but not the others
            .datah(1'b1),
                        
            // this does not exist in S10, but is partially there in the models right this second
            .sharein(1'b0),
            // synthesis translate_on
            
            .sumout(),.cout(),.shareout(),
            .combout(dout_w[25])
        );
    end
endgenerate


generate
    if (SIM_EMULATE) begin : gen_s10c_26
        wire [63:0] local_mask = 64'hff00f0f0ccccaaaa;
        wire [5:0] local_din = {1'b0,sel,1'b0,1'b0,din[58],din[26]};
        assign dout_w[26] = local_mask [local_din];
    end else begin
        //Note: the S5 cell is 99% the same, and compatible
        //stratixv_lcell_comb s5c (
 
        fourteennm_lcell_comb  #(
            .lut_mask(64'hff00f0f0ccccaaaa),
            .shared_arith("off"),
            .extended_lut("off")
        ) s10c_26 (
            .dataa (din[26]),
            .datab (din[58]),
            .datac (1'b0),
            .datad (1'b0),
            .datae (sel),
            .dataf (1'b0),
            .datag(1'b1),
            
            .cin(1'b1),
            
            
            // synthesis translate_off
            // this is for stratix 10 (fourteen) but not the others
            .datah(1'b1),
                        
            // this does not exist in S10, but is partially there in the models right this second
            .sharein(1'b0),
            // synthesis translate_on
            
            .sumout(),.cout(),.shareout(),
            .combout(dout_w[26])
        );
    end
endgenerate


generate
    if (SIM_EMULATE) begin : gen_s10c_27
        wire [63:0] local_mask = 64'hff00f0f0ccccaaaa;
        wire [5:0] local_din = {1'b0,sel,1'b0,1'b0,din[59],din[27]};
        assign dout_w[27] = local_mask [local_din];
    end else begin
        //Note: the S5 cell is 99% the same, and compatible
        //stratixv_lcell_comb s5c (
 
        fourteennm_lcell_comb  #(
            .lut_mask(64'hff00f0f0ccccaaaa),
            .shared_arith("off"),
            .extended_lut("off")
        ) s10c_27 (
            .dataa (din[27]),
            .datab (din[59]),
            .datac (1'b0),
            .datad (1'b0),
            .datae (sel),
            .dataf (1'b0),
            .datag(1'b1),
            
            .cin(1'b1),
            
            
            // synthesis translate_off
            // this is for stratix 10 (fourteen) but not the others
            .datah(1'b1),
                        
            // this does not exist in S10, but is partially there in the models right this second
            .sharein(1'b0),
            // synthesis translate_on
            
            .sumout(),.cout(),.shareout(),
            .combout(dout_w[27])
        );
    end
endgenerate


generate
    if (SIM_EMULATE) begin : gen_s10c_28
        wire [63:0] local_mask = 64'hff00f0f0ccccaaaa;
        wire [5:0] local_din = {1'b0,sel,1'b0,1'b0,din[60],din[28]};
        assign dout_w[28] = local_mask [local_din];
    end else begin
        //Note: the S5 cell is 99% the same, and compatible
        //stratixv_lcell_comb s5c (
 
        fourteennm_lcell_comb  #(
            .lut_mask(64'hff00f0f0ccccaaaa),
            .shared_arith("off"),
            .extended_lut("off")
        ) s10c_28 (
            .dataa (din[28]),
            .datab (din[60]),
            .datac (1'b0),
            .datad (1'b0),
            .datae (sel),
            .dataf (1'b0),
            .datag(1'b1),
            
            .cin(1'b1),
            
            
            // synthesis translate_off
            // this is for stratix 10 (fourteen) but not the others
            .datah(1'b1),
                        
            // this does not exist in S10, but is partially there in the models right this second
            .sharein(1'b0),
            // synthesis translate_on
            
            .sumout(),.cout(),.shareout(),
            .combout(dout_w[28])
        );
    end
endgenerate


generate
    if (SIM_EMULATE) begin : gen_s10c_29
        wire [63:0] local_mask = 64'hff00f0f0ccccaaaa;
        wire [5:0] local_din = {1'b0,sel,1'b0,1'b0,din[61],din[29]};
        assign dout_w[29] = local_mask [local_din];
    end else begin
        //Note: the S5 cell is 99% the same, and compatible
        //stratixv_lcell_comb s5c (
 
        fourteennm_lcell_comb  #(
            .lut_mask(64'hff00f0f0ccccaaaa),
            .shared_arith("off"),
            .extended_lut("off")
        ) s10c_29 (
            .dataa (din[29]),
            .datab (din[61]),
            .datac (1'b0),
            .datad (1'b0),
            .datae (sel),
            .dataf (1'b0),
            .datag(1'b1),
            
            .cin(1'b1),
            
            
            // synthesis translate_off
            // this is for stratix 10 (fourteen) but not the others
            .datah(1'b1),
                        
            // this does not exist in S10, but is partially there in the models right this second
            .sharein(1'b0),
            // synthesis translate_on
            
            .sumout(),.cout(),.shareout(),
            .combout(dout_w[29])
        );
    end
endgenerate


generate
    if (SIM_EMULATE) begin : gen_s10c_30
        wire [63:0] local_mask = 64'hff00f0f0ccccaaaa;
        wire [5:0] local_din = {1'b0,sel,1'b0,1'b0,din[62],din[30]};
        assign dout_w[30] = local_mask [local_din];
    end else begin
        //Note: the S5 cell is 99% the same, and compatible
        //stratixv_lcell_comb s5c (
 
        fourteennm_lcell_comb  #(
            .lut_mask(64'hff00f0f0ccccaaaa),
            .shared_arith("off"),
            .extended_lut("off")
        ) s10c_30 (
            .dataa (din[30]),
            .datab (din[62]),
            .datac (1'b0),
            .datad (1'b0),
            .datae (sel),
            .dataf (1'b0),
            .datag(1'b1),
            
            .cin(1'b1),
            
            
            // synthesis translate_off
            // this is for stratix 10 (fourteen) but not the others
            .datah(1'b1),
                        
            // this does not exist in S10, but is partially there in the models right this second
            .sharein(1'b0),
            // synthesis translate_on
            
            .sumout(),.cout(),.shareout(),
            .combout(dout_w[30])
        );
    end
endgenerate


generate
    if (SIM_EMULATE) begin : gen_s10c_31
        wire [63:0] local_mask = 64'hff00f0f0ccccaaaa;
        wire [5:0] local_din = {1'b0,sel,1'b0,1'b0,din[63],din[31]};
        assign dout_w[31] = local_mask [local_din];
    end else begin
        //Note: the S5 cell is 99% the same, and compatible
        //stratixv_lcell_comb s5c (
 
        fourteennm_lcell_comb  #(
            .lut_mask(64'hff00f0f0ccccaaaa),
            .shared_arith("off"),
            .extended_lut("off")
        ) s10c_31 (
            .dataa (din[31]),
            .datab (din[63]),
            .datac (1'b0),
            .datad (1'b0),
            .datae (sel),
            .dataf (1'b0),
            .datag(1'b1),
            
            .cin(1'b1),
            
            
            // synthesis translate_off
            // this is for stratix 10 (fourteen) but not the others
            .datah(1'b1),
                        
            // this does not exist in S10, but is partially there in the models right this second
            .sharein(1'b0),
            // synthesis translate_on
            
            .sumout(),.cout(),.shareout(),
            .combout(dout_w[31])
        );
    end
endgenerate


reg [31:0] dout_r = 32'b0;
always @(posedge clk) dout_r <= dout_w;
assign dout = dout_r;


endmodule

