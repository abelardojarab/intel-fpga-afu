// Copyright 2010-2017 Altera Corporation. All rights reserved.
// Altera products are protected under numerous U.S. and foreign patents, 
// maskwork rights, copyrights and other intellectual property laws.  
//
// This reference design file, and your use thereof, is subject to and governed
// by the terms and conditions of the applicable Altera Reference Design 
// License Agreement (either as signed by you or found at www.altera.com).  By
// using this reference design file, you indicate your acceptance of such terms
// and conditions between you and Altera Corporation.  In the event that you do
// not agree with such terms and conditions, you may not use the reference 
// design file and please promptly destroy any copies you have made.
//
// This reference design file is being provided on an "as-is" basis and as an 
// accommodation and therefore all warranties, representations or guarantees of 
// any kind (whether express, implied or statutory) including, without 
// limitation, warranties of merchantability, non-infringement, or fitness for
// a particular purpose, are specifically disclaimed.  By making this reference
// design file available, Altera expressly does not recommend, suggest or 
// require that this reference design file be used in combination with any 
// other product not provided by Altera.
/////////////////////////////////////////////////////////////////////////////

`timescale 1ps/1ps

// Generated by one of Gregg's toys.   Share And Enjoy.
// Executable compiled Jan 13 2017 09:25:15
// This file was generated 01/25/2017 16:26:06

module lfsr_8_p12d #(
    parameter SIM_EMULATE = 1'b0
) (
    input clk,
    input sclr,
    output [7:0] dout
);

localparam [7:0] INIT_VAL = 8'h55;

localparam [7:0] MY_POLY = 8'h2d;

reg [7:0] val = INIT_VAL /* synthesis preserve dont_replicate */;
always @(posedge clk) begin
    if (sclr) val <= INIT_VAL;
    else val <= {val[6:0],1'b0} ^ (val[7] ? MY_POLY : 8'h0);
end

assign dout = val;

endmodule

