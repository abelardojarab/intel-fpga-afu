	stream_to_memory_dma_bbb u0 (
		.clk_clk                       (_connected_to_clk_clk_),                       //   input,    width = 1,         clk.clk
		.csr_waitrequest               (_connected_to_csr_waitrequest_),               //  output,    width = 1,         csr.waitrequest
		.csr_readdata                  (_connected_to_csr_readdata_),                  //  output,   width = 64,            .readdata
		.csr_readdatavalid             (_connected_to_csr_readdatavalid_),             //  output,    width = 1,            .readdatavalid
		.csr_burstcount                (_connected_to_csr_burstcount_),                //   input,    width = 1,            .burstcount
		.csr_writedata                 (_connected_to_csr_writedata_),                 //   input,   width = 64,            .writedata
		.csr_address                   (_connected_to_csr_address_),                   //   input,    width = 8,            .address
		.csr_write                     (_connected_to_csr_write_),                     //   input,    width = 1,            .write
		.csr_read                      (_connected_to_csr_read_),                      //   input,    width = 1,            .read
		.csr_byteenable                (_connected_to_csr_byteenable_),                //   input,    width = 8,            .byteenable
		.csr_debugaccess               (_connected_to_csr_debugaccess_),               //   input,    width = 1,            .debugaccess
		.host_write_address            (_connected_to_host_write_address_),            //  output,   width = 48,  host_write.address
		.host_write_writedata          (_connected_to_host_write_writedata_),          //  output,  width = 512,            .writedata
		.host_write_write              (_connected_to_host_write_write_),              //  output,    width = 1,            .write
		.host_write_byteenable         (_connected_to_host_write_byteenable_),         //  output,   width = 64,            .byteenable
		.host_write_burstcount         (_connected_to_host_write_burstcount_),         //  output,    width = 3,            .burstcount
		.host_write_response           (_connected_to_host_write_response_),           //   input,    width = 2,            .response
		.host_write_waitrequest        (_connected_to_host_write_waitrequest_),        //   input,    width = 1,            .waitrequest
		.host_write_writeresponsevalid (_connected_to_host_write_writeresponsevalid_), //   input,    width = 1,            .writeresponsevalid
		.mem_write_waitrequest         (_connected_to_mem_write_waitrequest_),         //   input,    width = 1,   mem_write.waitrequest
		.mem_write_readdata            (_connected_to_mem_write_readdata_),            //   input,  width = 512,            .readdata
		.mem_write_readdatavalid       (_connected_to_mem_write_readdatavalid_),       //   input,    width = 1,            .readdatavalid
		.mem_write_burstcount          (_connected_to_mem_write_burstcount_),          //  output,    width = 3,            .burstcount
		.mem_write_writedata           (_connected_to_mem_write_writedata_),           //  output,  width = 512,            .writedata
		.mem_write_address             (_connected_to_mem_write_address_),             //  output,   width = 48,            .address
		.mem_write_write               (_connected_to_mem_write_write_),               //  output,    width = 1,            .write
		.mem_write_read                (_connected_to_mem_write_read_),                //  output,    width = 1,            .read
		.mem_write_byteenable          (_connected_to_mem_write_byteenable_),          //  output,   width = 64,            .byteenable
		.mem_write_debugaccess         (_connected_to_mem_write_debugaccess_),         //  output,    width = 1,            .debugaccess
		.reset_reset                   (_connected_to_reset_reset_),                   //   input,    width = 1,       reset.reset
		.s2m_irq_irq                   (_connected_to_s2m_irq_irq_),                   //  output,    width = 1,     s2m_irq.irq
		.s2m_st_sink_data              (_connected_to_s2m_st_sink_data_),              //   input,  width = 512, s2m_st_sink.data
		.s2m_st_sink_empty             (_connected_to_s2m_st_sink_empty_),             //   input,    width = 6,            .empty
		.s2m_st_sink_endofpacket       (_connected_to_s2m_st_sink_endofpacket_),       //   input,    width = 1,            .endofpacket
		.s2m_st_sink_ready             (_connected_to_s2m_st_sink_ready_),             //  output,    width = 1,            .ready
		.s2m_st_sink_startofpacket     (_connected_to_s2m_st_sink_startofpacket_),     //   input,    width = 1,            .startofpacket
		.s2m_st_sink_valid             (_connected_to_s2m_st_sink_valid_)              //   input,    width = 1,            .valid
	);

